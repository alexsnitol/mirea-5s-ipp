swagger: '2.0'
info:
  description: This project was developed as a final work after the Java courses for web developers from SENLA.
  version: 0.1.0
  title: Real Estate Market API
  termsOfService: urn:tos
  contact:
    name: Alexander Slotin
    url: https://github.com/alexsnitol
    email: sslotin74@gmail.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
host: localhost:8080
tags:
  - name: address-controller
    description: Address Controller
  - name: announcement-controller
    description: Announcement Controller
  - name: announcement-top-price-controller
    description: Announcement Top Price Controller
  - name: apartment-announcement-controller
    description: Apartment Announcement Controller
  - name: apartment-announcement-rent-timetable-controller
    description: Apartment Announcement Rent Timetable Controller
  - name: apartment-announcement-top-timetable-controller
    description: Apartment Announcement Top Timetable Controller
  - name: apartment-house-controller
    description: Apartment House Controller
  - name: apartment-property-controller
    description: Apartment Property Controller
  - name: auth-controller
    description: Auth Controller
  - name: balance-operation-controller
    description: Balance Operation Controller
  - name: city-controller
    description: City Controller
  - name: enum-controller
    description: Enum Controller
  - name: family-house-announcement-controller
    description: Family House Announcement Controller
  - name: family-house-announcement-rent-timetable-controller
    description: Family House Announcement Rent Timetable Controller
  - name: family-house-announcement-top-timetable-controller
    description: Family House Announcement Top Timetable Controller
  - name: family-house-controller
    description: Family House Controller
  - name: family-house-property-controller
    description: Family House Property Controller
  - name: house-controller
    description: House Controller
  - name: house-material-controller
    description: House Material Controller
  - name: land-announcement-controller
    description: Land Announcement Controller
  - name: land-announcement-top-timetable-controller
    description: Land Announcement Top Timetable Controller
  - name: land-property-controller
    description: Land Property Controller
  - name: message-controller
    description: Message Controller
  - name: property-controller
    description: Property Controller
  - name: region-controller
    description: Region Controller
  - name: renovation-type-controller
    description: Renovation Type Controller
  - name: review-controller
    description: Review Controller
  - name: street-controller
    description: Street Controller
  - name: user-controller
    description: User Controller
paths:
  /real-estate-market/api/addresses:
    get:
      tags:
        - address-controller
      summary: getAll
      operationId: getAllUsingGET
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: q
          in: query
          description: q
          required: false
          type: string
        - name: sort
          in: query
          description: sort
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/AddressDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - address-controller
      summary: add
      operationId: addUsingPOST
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - in: body
          name: requestAddressDto
          description: requestAddressDto
          required: true
          schema:
            $ref: '#/definitions/RequestAddressDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
  /real-estate-market/api/addresses/{id}:
    get:
      tags:
        - address-controller
      summary: getById
      operationId: getByIdUsingGET
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AddressDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - address-controller
      summary: updateById
      operationId: updateByIdUsingPUT
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - in: body
          name: updateRequestAddressDto
          description: updateRequestAddressDto
          required: true
          schema:
            $ref: '#/definitions/UpdateRequestAddressDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
    delete:
      tags:
        - address-controller
      summary: deleteById
      operationId: deleteByIdUsingDELETE
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - ADMIN: []
  /real-estate-market/api/announcement-top-prices:
    get:
      tags:
        - announcement-top-price-controller
      summary: getAllAnnouncementTopPrices
      operationId: getAllAnnouncementTopPricesUsingGET
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: q
          in: query
          description: q
          required: false
          type: string
        - name: sort
          in: query
          description: sort
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/AnnouncementTopPrice'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /real-estate-market/api/announcement-top-prices/{id}:
    get:
      tags:
        - announcement-top-price-controller
      summary: getAnnouncementTopPriceById
      operationId: getAnnouncementTopPriceByIdUsingGET
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AnnouncementTopPrice'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - announcement-top-price-controller
      summary: updateAnnouncementTopPriceById
      description: Update price per hour of announcement top price by id
      operationId: updateAnnouncementTopPriceByIdUsingPUT
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - in: body
          name: updateRequestAnnouncementTopPriceDto
          description: updateRequestAnnouncementTopPriceDto
          required: true
          schema:
            $ref: '#/definitions/UpdateRequestAnnouncementTopPriceDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
  /real-estate-market/api/announcements:
    get:
      tags:
        - announcement-controller
      summary: getAllAnnouncements
      operationId: getAllAnnouncementsUsingGET
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: q
          in: query
          description: q
          required: false
          type: string
        - name: sort
          in: query
          description: sort
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/AnnouncementDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
  /real-estate-market/api/announcements/housing:
    get:
      tags:
        - announcement-controller
      summary: getAllHousingAnnouncements
      operationId: getAllHousingAnnouncementsUsingGET
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: q
          in: query
          description: q
          required: false
          type: string
        - name: sort
          in: query
          description: sort
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/HousingAnnouncementDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
  /real-estate-market/api/announcements/housing/apartments:
    get:
      tags:
        - apartment-announcement-controller
      summary: getAll
      operationId: getAllUsingGET_1
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: q
          in: query
          description: q
          required: false
          type: string
        - name: sort
          in: query
          description: sort
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ApartmentAnnouncementDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
    post:
      tags:
        - apartment-announcement-controller
      summary: add
      description: Add new apartment announcement from DTO with HIDDEN status
      operationId: addUsingPOST_1
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - in: body
          name: requestApartmentAnnouncementDto
          description: requestApartmentAnnouncementDto
          required: true
          schema:
            $ref: '#/definitions/RequestApartmentAnnouncementDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
  /real-estate-market/api/announcements/housing/apartments/closed/owners/{userIdOfOwner}:
    get:
      tags:
        - apartment-announcement-controller
      summary: getAllWithClosedStatusByUserIfOfOwner
      operationId: getAllWithClosedStatusByUserIfOfOwnerUsingGET
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: q
          in: query
          description: q
          required: false
          type: string
        - name: sort
          in: query
          description: sort
          required: false
          type: string
        - name: userIdOfOwner
          in: path
          description: userIdOfOwner
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ApartmentAnnouncementDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /real-estate-market/api/announcements/housing/apartments/open:
    get:
      tags:
        - apartment-announcement-controller
      summary: getAllWithOpenStatus
      description: Get all apartment announcement with OPEN status
      operationId: getAllWithOpenStatusUsingGET
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: q
          in: query
          description: q
          required: false
          type: string
        - name: sort
          in: query
          description: sort
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ApartmentAnnouncementDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /real-estate-market/api/announcements/housing/apartments/open/search:
    get:
      tags:
        - apartment-announcement-controller
      summary: getAllWithOpenStatusByKeyWords
      description: Search by key words in all string fields in open announcements
      operationId: getAllWithOpenStatusByKeyWordsUsingGET_1
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: keywords
          in: query
          description: keywords
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ApartmentAnnouncementDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /real-estate-market/api/announcements/housing/apartments/open/{apartmentAnnouncementId}/timetables/rent/only-date-times:
    get:
      tags:
        - apartment-announcement-rent-timetable-controller
      summary: getAllWithOpenStatusByApartmentIdOnlyDateTimes
      operationId: getAllWithOpenStatusByApartmentIdOnlyDateTimesUsingGET
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: apartmentAnnouncementId
          in: path
          description: apartmentAnnouncementId
          required: true
          type: integer
          format: int64
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: rsqlQuery
          in: query
          description: rsqlQuery
          required: false
          type: string
        - name: sortQuery
          in: query
          description: sortQuery
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/RentTimetableWithoutAnnouncementIdDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /real-estate-market/api/announcements/housing/apartments/open/{apartmentAnnouncementId}/timetables/rent/tenants/current:
    post:
      tags:
        - apartment-announcement-rent-timetable-controller
      summary: addByApartmentAnnouncementIdWithOpenStatusAndPayFromCurrentTenantUser
      operationId: addByApartmentAnnouncementIdWithOpenStatusAndPayFromCurrentTenantUserUsingPOST
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: apartmentAnnouncementId
          in: path
          description: apartmentAnnouncementId
          required: true
          type: integer
          format: int64
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - in: body
          name: requestRentTimetableDto
          description: requestRentTimetableDto
          required: true
          schema:
            $ref: '#/definitions/RequestRentTimetableDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorized user: []
  /real-estate-market/api/announcements/housing/apartments/open/{id}:
    get:
      tags:
        - apartment-announcement-controller
      summary: getByIdWithOpenStatus
      description: Get apartment announcement by id with OPEN status
      operationId: getByIdWithOpenStatusUsingGET
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApartmentAnnouncementDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /real-estate-market/api/announcements/housing/apartments/owners/current:
    get:
      tags:
        - apartment-announcement-controller
      summary: getAllOfCurrentUser
      operationId: getAllOfCurrentUserUsingGET
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: q
          in: query
          description: q
          required: false
          type: string
        - name: sort
          in: query
          description: sort
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ApartmentAnnouncementDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorized user: []
    post:
      tags:
        - apartment-announcement-controller
      summary: addFromCurrentUser
      operationId: addFromCurrentUserUsingPOST
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - in: body
          name: requestApartmentAnnouncementDto
          description: requestApartmentAnnouncementDto
          required: true
          schema:
            $ref: '#/definitions/RequestApartmentAnnouncementDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorized user: []
  /real-estate-market/api/announcements/housing/apartments/owners/current/{apartmentAnnouncementId}/timetables/rent:
    get:
      tags:
        - apartment-announcement-rent-timetable-controller
      summary: getAllOfCurrentUserByApartmentId
      operationId: getAllOfCurrentUserByApartmentIdUsingGET
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: apartmentAnnouncementId
          in: path
          description: apartmentAnnouncementId
          required: true
          type: integer
          format: int64
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: rsqlQuery
          in: query
          description: rsqlQuery
          required: false
          type: string
        - name: sortQuery
          in: query
          description: sortQuery
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/RentTimetableWithoutAnnouncementIdDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorized user: []
  /real-estate-market/api/announcements/housing/apartments/owners/current/{apartmentAnnouncementId}/timetables/top:
    get:
      tags:
        - apartment-announcement-top-timetable-controller
      summary: getAllOfCurrentUserByApartmentId
      operationId: getAllOfCurrentUserByApartmentIdUsingGET_1
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: apartmentAnnouncementId
          in: path
          description: apartmentAnnouncementId
          required: true
          type: integer
          format: int64
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: rsqlQuery
          in: query
          description: rsqlQuery
          required: false
          type: string
        - name: sortQuery
          in: query
          description: sortQuery
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/TopTimetableWithoutAnnouncementIdDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorized user: []
    post:
      tags:
        - apartment-announcement-top-timetable-controller
      summary: addByApartmentIdWithPayFromCurrentUser
      operationId: addByApartmentIdWithPayFromCurrentUserUsingPOST
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: apartmentAnnouncementId
          in: path
          description: apartmentAnnouncementId
          required: true
          type: integer
          format: int64
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - in: body
          name: requestTopTimetableDto
          description: requestTopTimetableDto
          required: true
          schema:
            $ref: '#/definitions/RequestTopTimetableDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorized user: []
  /real-estate-market/api/announcements/housing/apartments/owners/current/{id}:
    get:
      tags:
        - apartment-announcement-controller
      summary: getByIdOfCurrentUser
      operationId: getByIdOfCurrentUserUsingGET
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApartmentAnnouncementDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorized user: []
    put:
      tags:
        - apartment-announcement-controller
      summary: updateByIdFromCurrentUser
      description: Update apartment announcement by id with validation on access to update for current user
      operationId: updateByIdFromCurrentUserUsingPUT
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - in: body
          name: updateRequestApartmentAnnouncementDto
          description: updateRequestApartmentAnnouncementDto
          required: true
          schema:
            $ref: '#/definitions/UpdateRequestApartmentAnnouncementDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorized user: []
  /real-estate-market/api/announcements/housing/apartments/search:
    get:
      tags:
        - apartment-announcement-controller
      summary: getAllByKeyWords
      description: Search by key words in all string fields
      operationId: getAllByKeyWordsUsingGET_1
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: keywords
          in: query
          description: keywords
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ApartmentAnnouncementDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
  /real-estate-market/api/announcements/housing/apartments/timetables/rent/tenants/current:
    get:
      tags:
        - apartment-announcement-rent-timetable-controller
      summary: getAllOfCurrentTenantUser
      operationId: getAllOfCurrentTenantUserUsingGET
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: rsqlQuery
          in: query
          description: rsqlQuery
          required: false
          type: string
        - name: sortQuery
          in: query
          description: sortQuery
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/RentTimetableDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorized user: []
  /real-estate-market/api/announcements/housing/apartments/{apartmentAnnouncementId}/timetables/rent:
    get:
      tags:
        - apartment-announcement-rent-timetable-controller
      summary: getAllByApartmentId
      operationId: getAllByApartmentIdUsingGET
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: apartmentAnnouncementId
          in: path
          description: apartmentAnnouncementId
          required: true
          type: integer
          format: int64
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: rsqlQuery
          in: query
          description: rsqlQuery
          required: false
          type: string
        - name: sortQuery
          in: query
          description: sortQuery
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/RentTimetableWithoutAnnouncementIdAndWithUserIdOfTenantDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
    post:
      tags:
        - apartment-announcement-rent-timetable-controller
      summary: addByApartmentIdWithoutPay
      operationId: addByApartmentIdWithoutPayUsingPOST
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: apartmentAnnouncementId
          in: path
          description: apartmentAnnouncementId
          required: true
          type: integer
          format: int64
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - in: body
          name: requestRentTimetableWithUserIdOfTenantDto
          description: requestRentTimetableWithUserIdOfTenantDto
          required: true
          schema:
            $ref: '#/definitions/RequestRentTimetableWithUserIdOfTenantDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
  /real-estate-market/api/announcements/housing/apartments/{apartmentAnnouncementId}/timetables/rent/only-date-times:
    get:
      tags:
        - apartment-announcement-rent-timetable-controller
      summary: getAllByApartmentIdOnlyDateTimes
      operationId: getAllByApartmentIdOnlyDateTimesUsingGET
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: apartmentAnnouncementId
          in: path
          description: apartmentAnnouncementId
          required: true
          type: integer
          format: int64
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: rsqlQuery
          in: query
          description: rsqlQuery
          required: false
          type: string
        - name: sortQuery
          in: query
          description: sortQuery
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/RentTimetableWithoutAnnouncementIdDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
  /real-estate-market/api/announcements/housing/apartments/{apartmentAnnouncementId}/timetables/rent/tenants/current:
    get:
      tags:
        - apartment-announcement-rent-timetable-controller
      summary: getAllOfCurrentTenantUserByApartmentAnnouncementId
      operationId: getAllOfCurrentTenantUserByApartmentAnnouncementIdUsingGET
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: apartmentAnnouncementId
          in: path
          description: apartmentAnnouncementId
          required: true
          type: integer
          format: int64
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: rsqlQuery
          in: query
          description: rsqlQuery
          required: false
          type: string
        - name: sortQuery
          in: query
          description: sortQuery
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/RentTimetableWithoutAnnouncementIdDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorized user: []
    post:
      tags:
        - apartment-announcement-rent-timetable-controller
      summary: addByApartmentIdWithPayFromCurrentTenantUser
      operationId: addByApartmentIdWithPayFromCurrentTenantUserUsingPOST
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: apartmentAnnouncementId
          in: path
          description: apartmentAnnouncementId
          required: true
          type: integer
          format: int64
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - in: body
          name: requestRentTimetableDto
          description: requestRentTimetableDto
          required: true
          schema:
            $ref: '#/definitions/RequestRentTimetableDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
  /real-estate-market/api/announcements/housing/apartments/{apartmentAnnouncementId}/timetables/top:
    get:
      tags:
        - apartment-announcement-top-timetable-controller
      summary: getAllByApartmentId
      operationId: getAllByApartmentIdUsingGET_1
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: apartmentAnnouncementId
          in: path
          description: apartmentAnnouncementId
          required: true
          type: integer
          format: int64
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: rsqlQuery
          in: query
          description: rsqlQuery
          required: false
          type: string
        - name: sortQuery
          in: query
          description: sortQuery
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/TopTimetableWithoutAnnouncementIdDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
    post:
      tags:
        - apartment-announcement-top-timetable-controller
      summary: addByApartmentIdWithoutPay
      operationId: addByApartmentIdWithoutPayUsingPOST_1
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: apartmentAnnouncementId
          in: path
          description: apartmentAnnouncementId
          required: true
          type: integer
          format: int64
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - in: body
          name: requestTopTimetableDto
          description: requestTopTimetableDto
          required: true
          schema:
            $ref: '#/definitions/RequestTopTimetableDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
  /real-estate-market/api/announcements/housing/apartments/{id}:
    get:
      tags:
        - apartment-announcement-controller
      summary: getById
      operationId: getByIdUsingGET_1
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApartmentAnnouncementDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
    put:
      tags:
        - apartment-announcement-controller
      summary: updateById
      operationId: updateByIdUsingPUT_1
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - in: body
          name: updateRequestApartmentAnnouncementDto
          description: updateRequestApartmentAnnouncementDto
          required: true
          schema:
            $ref: '#/definitions/UpdateRequestApartmentAnnouncementDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
    delete:
      tags:
        - apartment-announcement-controller
      summary: deleteById
      operationId: deleteByIdUsingDELETE_1
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - ADMIN: []
  /real-estate-market/api/announcements/housing/family-houses:
    get:
      tags:
        - family-house-announcement-controller
      summary: getAll
      operationId: getAllUsingGET_5
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: q
          in: query
          description: q
          required: false
          type: string
        - name: sort
          in: query
          description: sort
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/FamilyHouseAnnouncementDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
    post:
      tags:
        - family-house-announcement-controller
      summary: add
      description: Add new family house announcement from DTO with HIDDEN status
      operationId: addUsingPOST_5
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - in: body
          name: requestFamilyHouseAnnouncementDto
          description: requestFamilyHouseAnnouncementDto
          required: true
          schema:
            $ref: '#/definitions/RequestFamilyHouseAnnouncementDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
  /real-estate-market/api/announcements/housing/family-houses/closed/owners/{userIdOfOwner}:
    get:
      tags:
        - family-house-announcement-controller
      summary: getAllWithClosedStatusByUserIfOfOwner
      operationId: getAllWithClosedStatusByUserIfOfOwnerUsingGET_1
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: q
          in: query
          description: q
          required: false
          type: string
        - name: sort
          in: query
          description: sort
          required: false
          type: string
        - name: userIdOfOwner
          in: path
          description: userIdOfOwner
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/FamilyHouseAnnouncementDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /real-estate-market/api/announcements/housing/family-houses/open:
    get:
      tags:
        - family-house-announcement-controller
      summary: getAllWithOpenStatus
      description: Get all family house announcements with OPEN status
      operationId: getAllWithOpenStatusUsingGET_1
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: q
          in: query
          description: q
          required: false
          type: string
        - name: sort
          in: query
          description: sort
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/FamilyHouseAnnouncementDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /real-estate-market/api/announcements/housing/family-houses/open/search:
    get:
      tags:
        - family-house-announcement-controller
      summary: getAllWithOpenStatusByKeyWords
      description: Search by key words in all string fields in open announcements
      operationId: getAllWithOpenStatusByKeyWordsUsingGET_2
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: keywords
          in: query
          description: keywords
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/FamilyHouseAnnouncementDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /real-estate-market/api/announcements/housing/family-houses/open/{familyHouseAnnouncementId}/timetables/rent/only-date-times:
    get:
      tags:
        - family-house-announcement-rent-timetable-controller
      summary: getAllWithOpenStatusByFamilyHouseIdOnlyDateTimes
      operationId: getAllWithOpenStatusByFamilyHouseIdOnlyDateTimesUsingGET
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: familyHouseAnnouncementId
          in: path
          description: familyHouseAnnouncementId
          required: true
          type: integer
          format: int64
        - name: rsqlQuery
          in: query
          description: rsqlQuery
          required: false
          type: string
        - name: sortQuery
          in: query
          description: sortQuery
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/RentTimetableWithoutAnnouncementIdDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /real-estate-market/api/announcements/housing/family-houses/open/{familyHouseAnnouncementId}/timetables/rent/tenants/current:
    post:
      tags:
        - family-house-announcement-rent-timetable-controller
      summary: addByFamilyHouseAnnouncementIdWithOpenStatusAndPayFromCurrentTenantUser
      operationId: addByFamilyHouseAnnouncementIdWithOpenStatusAndPayFromCurrentTenantUserUsingPOST
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: familyHouseAnnouncementId
          in: path
          description: familyHouseAnnouncementId
          required: true
          type: integer
          format: int64
        - in: body
          name: requestRentTimetableDto
          description: requestRentTimetableDto
          required: true
          schema:
            $ref: '#/definitions/RequestRentTimetableDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorized user: []
  /real-estate-market/api/announcements/housing/family-houses/open/{id}:
    get:
      tags:
        - family-house-announcement-controller
      summary: getByIdWithOpenStatus
      description: Get family house announcements by id with OPEN status
      operationId: getByIdWithOpenStatusUsingGET_1
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FamilyHouseAnnouncementDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /real-estate-market/api/announcements/housing/family-houses/owners/current:
    get:
      tags:
        - family-house-announcement-controller
      summary: getAllOfCurrentUser
      operationId: getAllOfCurrentUserUsingGET_1
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: q
          in: query
          description: q
          required: false
          type: string
        - name: sort
          in: query
          description: sort
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/FamilyHouseAnnouncementDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorized user: []
    post:
      tags:
        - family-house-announcement-controller
      summary: addFromCurrentUser
      operationId: addFromCurrentUserUsingPOST_2
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - in: body
          name: requestFamilyHouseAnnouncementDto
          description: requestFamilyHouseAnnouncementDto
          required: true
          schema:
            $ref: '#/definitions/RequestFamilyHouseAnnouncementDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorized user: []
  /real-estate-market/api/announcements/housing/family-houses/owners/current/{familyHouseAnnouncementId}/timetables/rent:
    get:
      tags:
        - family-house-announcement-rent-timetable-controller
      summary: getAllOfCurrentUserByFamilyHouseId
      operationId: getAllOfCurrentUserByFamilyHouseIdUsingGET
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: familyHouseAnnouncementId
          in: path
          description: familyHouseAnnouncementId
          required: true
          type: integer
          format: int64
        - name: rsqlQuery
          in: query
          description: rsqlQuery
          required: false
          type: string
        - name: sortQuery
          in: query
          description: sortQuery
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/RentTimetableWithoutAnnouncementIdDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorized user: []
  /real-estate-market/api/announcements/housing/family-houses/owners/current/{familyHouseAnnouncementId}/timetables/top:
    get:
      tags:
        - family-house-announcement-top-timetable-controller
      summary: getAllOfCurrentUserByFamilyHouseId
      operationId: getAllOfCurrentUserByFamilyHouseIdUsingGET_1
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: familyHouseAnnouncementId
          in: path
          description: familyHouseAnnouncementId
          required: true
          type: integer
          format: int64
        - name: rsqlQuery
          in: query
          description: rsqlQuery
          required: false
          type: string
        - name: sortQuery
          in: query
          description: sortQuery
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/TopTimetableWithoutAnnouncementIdDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorized user: []
    post:
      tags:
        - family-house-announcement-top-timetable-controller
      summary: addByFamilyHouseIdWithPayFromCurrentUser
      operationId: addByFamilyHouseIdWithPayFromCurrentUserUsingPOST
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: familyHouseAnnouncementId
          in: path
          description: familyHouseAnnouncementId
          required: true
          type: integer
          format: int64
        - in: body
          name: requestTopTimetableDto
          description: requestTopTimetableDto
          required: true
          schema:
            $ref: '#/definitions/RequestTopTimetableDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorized user: []
  /real-estate-market/api/announcements/housing/family-houses/owners/current/{id}:
    get:
      tags:
        - family-house-announcement-controller
      summary: getByIdOfCurrentUser
      operationId: getByIdOfCurrentUserUsingGET_2
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FamilyHouseAnnouncementDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorized user: []
    put:
      tags:
        - family-house-announcement-controller
      summary: updateByIdFromCurrentUser
      description: Update family house announcement by id with validation on access to update for current user
      operationId: updateByIdFromCurrentUserUsingPUT_1
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - in: body
          name: updateRequestFamilyHouseAnnouncementDto
          description: updateRequestFamilyHouseAnnouncementDto
          required: true
          schema:
            $ref: '#/definitions/UpdateRequestFamilyHouseAnnouncementDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorized user: []
  /real-estate-market/api/announcements/housing/family-houses/search:
    get:
      tags:
        - family-house-announcement-controller
      summary: getAllByKeyWords
      description: Search by key words in all string fields
      operationId: getAllByKeyWordsUsingGET_2
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: keywords
          in: query
          description: keywords
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/FamilyHouseAnnouncementDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
  /real-estate-market/api/announcements/housing/family-houses/timetables/rent/tenants/current:
    get:
      tags:
        - family-house-announcement-rent-timetable-controller
      summary: getAllOfCurrentTenantUser
      operationId: getAllOfCurrentTenantUserUsingGET_1
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: rsqlQuery
          in: query
          description: rsqlQuery
          required: false
          type: string
        - name: sortQuery
          in: query
          description: sortQuery
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/RentTimetableDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorized user: []
  /real-estate-market/api/announcements/housing/family-houses/{familyHouseAnnouncementId}/timetables/rent:
    get:
      tags:
        - family-house-announcement-rent-timetable-controller
      summary: getAllByFamilyHouseId
      operationId: getAllByFamilyHouseIdUsingGET
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: familyHouseAnnouncementId
          in: path
          description: familyHouseAnnouncementId
          required: true
          type: integer
          format: int64
        - name: rsqlQuery
          in: query
          description: rsqlQuery
          required: false
          type: string
        - name: sortQuery
          in: query
          description: sortQuery
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/RentTimetableWithoutAnnouncementIdAndWithUserIdOfTenantDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
    post:
      tags:
        - family-house-announcement-rent-timetable-controller
      summary: addByFamilyHouseIdWithoutPay
      operationId: addByFamilyHouseIdWithoutPayUsingPOST
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: familyHouseAnnouncementId
          in: path
          description: familyHouseAnnouncementId
          required: true
          type: integer
          format: int64
        - in: body
          name: requestRentTimetableWithUserIdOfTenantDto
          description: requestRentTimetableWithUserIdOfTenantDto
          required: true
          schema:
            $ref: '#/definitions/RequestRentTimetableWithUserIdOfTenantDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
  /real-estate-market/api/announcements/housing/family-houses/{familyHouseAnnouncementId}/timetables/rent/only-date-times:
    get:
      tags:
        - family-house-announcement-rent-timetable-controller
      summary: getAllByFamilyHouseIdOnlyDateTimes
      operationId: getAllByFamilyHouseIdOnlyDateTimesUsingGET
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: familyHouseAnnouncementId
          in: path
          description: familyHouseAnnouncementId
          required: true
          type: integer
          format: int64
        - name: rsqlQuery
          in: query
          description: rsqlQuery
          required: false
          type: string
        - name: sortQuery
          in: query
          description: sortQuery
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/RentTimetableWithoutAnnouncementIdDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
  /real-estate-market/api/announcements/housing/family-houses/{familyHouseAnnouncementId}/timetables/rent/tenants/current:
    get:
      tags:
        - family-house-announcement-rent-timetable-controller
      summary: getAllOfCurrentTenantUserByFamilyHouseAnnouncementId
      operationId: getAllOfCurrentTenantUserByFamilyHouseAnnouncementIdUsingGET
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: familyHouseAnnouncementId
          in: path
          description: familyHouseAnnouncementId
          required: true
          type: integer
          format: int64
        - name: rsqlQuery
          in: query
          description: rsqlQuery
          required: false
          type: string
        - name: sortQuery
          in: query
          description: sortQuery
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/RentTimetableWithoutAnnouncementIdDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorized user: []
    post:
      tags:
        - family-house-announcement-rent-timetable-controller
      summary: addByFamilyHouseIdWithPayFromCurrentTenantUser
      operationId: addByFamilyHouseIdWithPayFromCurrentTenantUserUsingPOST
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: familyHouseAnnouncementId
          in: path
          description: familyHouseAnnouncementId
          required: true
          type: integer
          format: int64
        - in: body
          name: requestRentTimetableDto
          description: requestRentTimetableDto
          required: true
          schema:
            $ref: '#/definitions/RequestRentTimetableDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
  /real-estate-market/api/announcements/housing/family-houses/{familyHouseAnnouncementId}/timetables/top:
    get:
      tags:
        - family-house-announcement-top-timetable-controller
      summary: getAllByFamilyHouseId
      operationId: getAllByFamilyHouseIdUsingGET_1
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: familyHouseAnnouncementId
          in: path
          description: familyHouseAnnouncementId
          required: true
          type: integer
          format: int64
        - name: rsqlQuery
          in: query
          description: rsqlQuery
          required: false
          type: string
        - name: sortQuery
          in: query
          description: sortQuery
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/TopTimetableWithoutAnnouncementIdDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
    post:
      tags:
        - family-house-announcement-top-timetable-controller
      summary: addByFamilyHouseIdWithoutPay
      operationId: addByFamilyHouseIdWithoutPayUsingPOST_1
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: familyHouseAnnouncementId
          in: path
          description: familyHouseAnnouncementId
          required: true
          type: integer
          format: int64
        - in: body
          name: requestTopTimetableDto
          description: requestTopTimetableDto
          required: true
          schema:
            $ref: '#/definitions/RequestTopTimetableDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
  /real-estate-market/api/announcements/housing/family-houses/{id}:
    get:
      tags:
        - family-house-announcement-controller
      summary: getById
      operationId: getByIdUsingGET_5
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FamilyHouseAnnouncementDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
    put:
      tags:
        - family-house-announcement-controller
      summary: updateById
      operationId: updateByIdUsingPUT_5
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - in: body
          name: updateRequestFamilyHouseAnnouncementDto
          description: updateRequestFamilyHouseAnnouncementDto
          required: true
          schema:
            $ref: '#/definitions/UpdateRequestFamilyHouseAnnouncementDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
    delete:
      tags:
        - family-house-announcement-controller
      summary: deleteById
      operationId: deleteByIdUsingDELETE_4
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - ADMIN: []
  /real-estate-market/api/announcements/housing/open:
    get:
      tags:
        - announcement-controller
      summary: getAllOpenHousingAnnouncements
      description: Get all housing announcement with OPEN status
      operationId: getAllOpenHousingAnnouncementsUsingGET
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: q
          in: query
          description: q
          required: false
          type: string
        - name: sort
          in: query
          description: sort
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/HousingAnnouncementDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /real-estate-market/api/announcements/lands:
    get:
      tags:
        - land-announcement-controller
      summary: getAll
      operationId: getAllUsingGET_10
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: q
          in: query
          description: q
          required: false
          type: string
        - name: sort
          in: query
          description: sort
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/LandAnnouncementDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
    post:
      tags:
        - land-announcement-controller
      summary: add
      description: Add new land announcement from DTO with HIDDEN status
      operationId: addUsingPOST_9
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - in: body
          name: requestLandAnnouncementDto
          description: requestLandAnnouncementDto
          required: true
          schema:
            $ref: '#/definitions/RequestLandAnnouncementDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
  /real-estate-market/api/announcements/lands/closed/owners/{userIdOfOwner}:
    get:
      tags:
        - land-announcement-controller
      summary: getAllWithClosedStatusByUserIfOfOwner
      operationId: getAllWithClosedStatusByUserIfOfOwnerUsingGET_2
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: q
          in: query
          description: q
          required: false
          type: string
        - name: sort
          in: query
          description: sort
          required: false
          type: string
        - name: userIdOfOwner
          in: path
          description: userIdOfOwner
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/LandAnnouncementDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /real-estate-market/api/announcements/lands/open:
    get:
      tags:
        - land-announcement-controller
      summary: getAllWithOpenStatus
      description: Get all land announcements with OPEN status
      operationId: getAllWithOpenStatusUsingGET_2
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: q
          in: query
          description: q
          required: false
          type: string
        - name: sort
          in: query
          description: sort
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/LandAnnouncementDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /real-estate-market/api/announcements/lands/open/search:
    get:
      tags:
        - land-announcement-controller
      summary: getAllWithOpenStatusByKeyWords
      description: Search by key words in all string fields in open announcements
      operationId: getAllWithOpenStatusByKeyWordsUsingGET_3
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: keywords
          in: query
          description: keywords
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/LandAnnouncementDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /real-estate-market/api/announcements/lands/open/{id}:
    get:
      tags:
        - land-announcement-controller
      summary: getByIdWithOpenStatus
      description: Get land announcement by id with OPEN status
      operationId: getByIdWithOpenStatusUsingGET_2
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/LandAnnouncementDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /real-estate-market/api/announcements/lands/owners/current:
    get:
      tags:
        - land-announcement-controller
      summary: getAllOfCurrentUser
      operationId: getAllOfCurrentUserUsingGET_2
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: q
          in: query
          description: q
          required: false
          type: string
        - name: sort
          in: query
          description: sort
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/LandAnnouncementDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorized user: []
    post:
      tags:
        - land-announcement-controller
      summary: addFromCurrentUser
      operationId: addFromCurrentUserUsingPOST_4
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - in: body
          name: requestLandAnnouncementDto
          description: requestLandAnnouncementDto
          required: true
          schema:
            $ref: '#/definitions/RequestLandAnnouncementDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorized user: []
  /real-estate-market/api/announcements/lands/owners/current/{id}:
    get:
      tags:
        - land-announcement-controller
      summary: getByIdOfCurrentUser
      operationId: getByIdOfCurrentUserUsingGET_3
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/LandAnnouncementDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorized user: []
    put:
      tags:
        - land-announcement-controller
      summary: updateByIdFromCurrentUser
      description: Update land announcement by id with validation on access to update for current user
      operationId: updateByIdFromCurrentUserUsingPUT_2
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - in: body
          name: updateRequestLandAnnouncementDto
          description: updateRequestLandAnnouncementDto
          required: true
          schema:
            $ref: '#/definitions/UpdateRequestLandAnnouncementDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorized user: []
  /real-estate-market/api/announcements/lands/owners/current/{landAnnouncementId}/timetables/top:
    get:
      tags:
        - land-announcement-top-timetable-controller
      summary: getAllOfCurrentUserByLandId
      operationId: getAllOfCurrentUserByLandIdUsingGET
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: landAnnouncementId
          in: path
          description: landAnnouncementId
          required: true
          type: integer
          format: int64
        - name: rsqlQuery
          in: query
          description: rsqlQuery
          required: false
          type: string
        - name: sortQuery
          in: query
          description: sortQuery
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/TopTimetableWithoutAnnouncementIdDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorized user: []
    post:
      tags:
        - land-announcement-top-timetable-controller
      summary: addByLandIdWithPayFromCurrentUser
      operationId: addByLandIdWithPayFromCurrentUserUsingPOST
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: landAnnouncementId
          in: path
          description: landAnnouncementId
          required: true
          type: integer
          format: int64
        - in: body
          name: requestTopTimetableDto
          description: requestTopTimetableDto
          required: true
          schema:
            $ref: '#/definitions/RequestTopTimetableDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorized user: []
  /real-estate-market/api/announcements/lands/search:
    get:
      tags:
        - land-announcement-controller
      summary: getAllByKeyWords
      description: Search by key words in all string fields
      operationId: getAllByKeyWordsUsingGET_3
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: keywords
          in: query
          description: keywords
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/LandAnnouncementDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /real-estate-market/api/announcements/lands/{id}:
    get:
      tags:
        - land-announcement-controller
      summary: getById
      operationId: getByIdUsingGET_9
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/LandAnnouncementDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
    put:
      tags:
        - land-announcement-controller
      summary: updateById
      operationId: updateByIdUsingPUT_9
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - in: body
          name: updateRequestLandAnnouncementDto
          description: updateRequestLandAnnouncementDto
          required: true
          schema:
            $ref: '#/definitions/UpdateRequestLandAnnouncementDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
    delete:
      tags:
        - land-announcement-controller
      summary: deleteById
      operationId: deleteByIdUsingDELETE_8
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - ADMIN: []
  /real-estate-market/api/announcements/lands/{landAnnouncementId}/timetables/top:
    get:
      tags:
        - land-announcement-top-timetable-controller
      summary: getAllByLandId
      operationId: getAllByLandIdUsingGET
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: landAnnouncementId
          in: path
          description: landAnnouncementId
          required: true
          type: integer
          format: int64
        - name: rsqlQuery
          in: query
          description: rsqlQuery
          required: false
          type: string
        - name: sortQuery
          in: query
          description: sortQuery
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/TopTimetableWithoutAnnouncementIdDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
    post:
      tags:
        - land-announcement-top-timetable-controller
      summary: addByLandIdWithoutPay
      operationId: addByLandIdWithoutPayUsingPOST
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: landAnnouncementId
          in: path
          description: landAnnouncementId
          required: true
          type: integer
          format: int64
        - in: body
          name: requestTopTimetableDto
          description: requestTopTimetableDto
          required: true
          schema:
            $ref: '#/definitions/RequestTopTimetableDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
  /real-estate-market/api/announcements/open:
    get:
      tags:
        - announcement-controller
      summary: getAllOpenAnnouncements
      description: Get all announcement with OPEN status
      operationId: getAllOpenAnnouncementsUsingGET
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: q
          in: query
          description: q
          required: false
          type: string
        - name: sort
          in: query
          description: sort
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/AnnouncementDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /real-estate-market/api/announcements/open/search:
    get:
      tags:
        - announcement-controller
      summary: getAllWithOpenStatusByKeyWords
      description: Search by key words in all string fields in open announcements
      operationId: getAllWithOpenStatusByKeyWordsUsingGET
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: keywords
          in: query
          description: keywords
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/AnnouncementDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /real-estate-market/api/announcements/search:
    get:
      tags:
        - announcement-controller
      summary: getAllByKeyWords
      description: Search by key words in all string fields
      operationId: getAllByKeyWordsUsingGET
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: keywords
          in: query
          description: keywords
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/AnnouncementDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
  /real-estate-market/api/auth:
    post:
      tags:
        - auth-controller
      summary: Create auth token
      description: Return JWT token if authorization is successful
      operationId: createAuthTokenUsingPOST
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - in: body
          name: authRequest
          description: authRequest
          required: true
          schema:
            $ref: '#/definitions/JwtRequestDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/JwtResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /real-estate-market/api/cities:
    get:
      tags:
        - city-controller
      summary: getAll
      operationId: getAllUsingGET_4
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: q
          in: query
          description: q
          required: false
          type: string
        - name: sort
          in: query
          description: sort
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/CityDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - city-controller
      summary: add
      operationId: addUsingPOST_4
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - in: body
          name: requestCityDto
          description: requestCityDto
          required: true
          schema:
            $ref: '#/definitions/RequestCityDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
  /real-estate-market/api/cities/{id}:
    get:
      tags:
        - city-controller
      summary: getById
      operationId: getByIdUsingGET_4
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CityDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - city-controller
      summary: updateById
      operationId: updateByIdUsingPUT_4
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - in: body
          name: updateRequestCityDto
          description: updateRequestCityDto
          required: true
          schema:
            $ref: '#/definitions/UpdateRequestCityDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
    delete:
      tags:
        - city-controller
      summary: deletedById
      operationId: deletedByIdUsingDELETE
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - ADMIN: []
  /real-estate-market/api/enums/housing-announcement-types:
    get:
      tags:
        - enum-controller
      summary: getAllHousingAnnouncementTypes
      operationId: getAllHousingAnnouncementTypesUsingGET
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: string
              enum:
                - DAILY_RENT
                - MONTHLY_RENT
                - SELL
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /real-estate-market/api/enums/housing-types:
    get:
      tags:
        - enum-controller
      summary: getAllHousingType
      operationId: getAllHousingTypeUsingGET
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: string
              enum:
                - NEW_CONSTRUCTION
                - SECONDARY
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /real-estate-market/api/enums/non-housing-announcement-types:
    get:
      tags:
        - enum-controller
      summary: getAllNonHousingAnnouncementTypes
      operationId: getAllNonHousingAnnouncementTypesUsingGET
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: string
              enum:
                - SELL
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /real-estate-market/api/enums/property-statuses:
    get:
      tags:
        - enum-controller
      summary: getAllPropertyStatuses
      operationId: getAllPropertyStatusesUsingGET
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: string
              enum:
                - ACTIVE
                - DELETED
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /real-estate-market/api/enums/property-types:
    get:
      tags:
        - enum-controller
      summary: getAllPropertyType
      operationId: getAllPropertyTypeUsingGET
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: string
              enum:
                - APARTMENT
                - FAMILY_HOUSE
                - LAND
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /real-estate-market/api/enums/rent-announcement-statuses:
    get:
      tags:
        - enum-controller
      summary: getAllRentAnnouncementStatuses
      operationId: getAllRentAnnouncementStatusesUsingGET
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: string
              enum:
                - DELETED
                - HIDDEN
                - OPEN
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /real-estate-market/api/enums/sell-announcement-statuses:
    get:
      tags:
        - enum-controller
      summary: getAllSellAnnouncementStatuses
      operationId: getAllSellAnnouncementStatusesUsingGET
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: string
              enum:
                - CLOSED
                - DELETED
                - HIDDEN
                - OPEN
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /real-estate-market/api/house-materials:
    get:
      tags:
        - house-material-controller
      summary: getAll
      operationId: getAllUsingGET_9
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: q
          in: query
          description: q
          required: false
          type: string
        - name: sort
          in: query
          description: sort
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/HouseMaterial'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - house-material-controller
      summary: add
      operationId: addUsingPOST_8
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - in: body
          name: requestHouseMaterialDto
          description: requestHouseMaterialDto
          required: true
          schema:
            $ref: '#/definitions/RequestHouseMaterialDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
  /real-estate-market/api/house-materials/{id}:
    get:
      tags:
        - house-material-controller
      summary: getById
      operationId: getByIdUsingGET_8
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/HouseMaterial'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - house-material-controller
      summary: updateById
      operationId: updateByIdUsingPUT_8
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - in: body
          name: requestHouseMaterialDto
          description: requestHouseMaterialDto
          required: true
          schema:
            $ref: '#/definitions/RequestHouseMaterialDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
    delete:
      tags:
        - house-material-controller
      summary: deleteById
      operationId: deleteByIdUsingDELETE_7
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - ADMIN: []
  /real-estate-market/api/houses:
    get:
      tags:
        - house-controller
      summary: getAll
      operationId: getAllUsingGET_8
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: q
          in: query
          description: q
          required: false
          type: string
        - name: sort
          in: query
          description: sort
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/HouseDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /real-estate-market/api/houses/apartment-houses:
    get:
      tags:
        - apartment-house-controller
      summary: getAll
      operationId: getAllUsingGET_2
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: q
          in: query
          description: q
          required: false
          type: string
        - name: sort
          in: query
          description: sort
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ApartmentHouseDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - apartment-house-controller
      summary: add
      operationId: addUsingPOST_2
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - in: body
          name: requestApartmentHouseDto
          description: requestApartmentHouseDto
          required: true
          schema:
            $ref: '#/definitions/RequestApartmentHouseDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
  /real-estate-market/api/houses/apartment-houses/{id}:
    get:
      tags:
        - apartment-house-controller
      summary: getById
      operationId: getByIdUsingGET_2
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApartmentHouseDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - apartment-house-controller
      summary: updateById
      operationId: updateByIdUsingPUT_2
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - in: body
          name: updateRequestApartmentHouseDto
          description: updateRequestApartmentHouseDto
          required: true
          schema:
            $ref: '#/definitions/UpdateRequestApartmentHouseDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
    delete:
      tags:
        - apartment-house-controller
      summary: deleteById
      operationId: deleteByIdUsingDELETE_2
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - ADMIN: []
  /real-estate-market/api/houses/family-houses:
    get:
      tags:
        - family-house-controller
      summary: getAll
      operationId: getAllUsingGET_6
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: q
          in: query
          description: q
          required: false
          type: string
        - name: sort
          in: query
          description: sort
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/FamilyHouseDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - family-house-controller
      summary: add
      operationId: addUsingPOST_6
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - in: body
          name: requestFamilyHouseDto
          description: requestFamilyHouseDto
          required: true
          schema:
            $ref: '#/definitions/RequestFamilyHouseDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
  /real-estate-market/api/houses/family-houses/{id}:
    get:
      tags:
        - family-house-controller
      summary: getById
      operationId: getByIdUsingGET_6
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FamilyHouseDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - family-house-controller
      summary: updateById
      operationId: updateByIdUsingPUT_6
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - in: body
          name: updateRequestFamilyHouseDto
          description: updateRequestFamilyHouseDto
          required: true
          schema:
            $ref: '#/definitions/UpdateRequestFamilyHouseDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
    delete:
      tags:
        - family-house-controller
      summary: deleteById
      operationId: deleteByIdUsingDELETE_5
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - ADMIN: []
  /real-estate-market/api/messages/users:
    get:
      tags:
        - message-controller
      summary: getMessageUsers
      description: Return all users with which current user have been messagesin order date of sending last message both incoming and outgoing
      operationId: getMessageUsersUsingGET
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            uniqueItems: true
            items:
              $ref: '#/definitions/SimplyUserDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorized user: []
  /real-estate-market/api/messages/users/{id}:
    get:
      tags:
        - message-controller
      summary: getMessagesOfCurrentUser
      description: Return all messages of current user with user by id in asc order sending date time
      operationId: getMessagesOfCurrentUserUsingGET
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/MessageDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorized user: []
    post:
      tags:
        - message-controller
      summary: sendMessage
      description: Send a message to user by id from current user
      operationId: sendMessageUsingPOST
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - in: body
          name: message
          description: message
          required: true
          schema:
            $ref: '#/definitions/RequestMessageDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorized user: []
  /real-estate-market/api/properties:
    get:
      tags:
        - property-controller
      summary: getAll
      operationId: getAllUsingGET_11
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: q
          in: query
          description: q
          required: false
          type: string
        - name: sort
          in: query
          description: sort
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/PropertyDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /real-estate-market/api/properties/housing:
    get:
      tags:
        - property-controller
      summary: getAllHousingProperties
      operationId: getAllHousingPropertiesUsingGET
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: q
          in: query
          description: q
          required: false
          type: string
        - name: sort
          in: query
          description: sort
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/HousingPropertyDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /real-estate-market/api/properties/housing/apartments:
    get:
      tags:
        - apartment-property-controller
      summary: getAll
      operationId: getAllUsingGET_3
      produces:
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: q
          in: query
          description: q
          required: false
          type: string
        - name: sort
          in: query
          description: sort
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ApartmentPropertyDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
    post:
      tags:
        - apartment-property-controller
      summary: add
      operationId: addUsingPOST_3
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - in: body
          name: requestApartmentPropertyWithUserIdOfOwnerDto
          description: requestApartmentPropertyWithUserIdOfOwnerDto
          required: true
          schema:
            $ref: '#/definitions/RequestApartmentPropertyWithUserIdOfOwnerDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
  /real-estate-market/api/properties/housing/apartments/owners/current:
    get:
      tags:
        - apartment-property-controller
      summary: getAllDtoOfCurrentUser
      operationId: getAllDtoOfCurrentUserUsingGET
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: q
          in: query
          description: q
          required: false
          type: string
        - name: sort
          in: query
          description: sort
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ApartmentPropertyDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorized user: []
    post:
      tags:
        - apartment-property-controller
      summary: addFromCurrentUser
      operationId: addFromCurrentUserUsingPOST_1
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - in: body
          name: requestApartmentPropertyDto
          description: requestApartmentPropertyDto
          required: true
          schema:
            $ref: '#/definitions/RequestApartmentPropertyDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorized user: []
  /real-estate-market/api/properties/housing/apartments/owners/current/{id}:
    get:
      tags:
        - apartment-property-controller
      summary: getByIdOfCurrentUser
      operationId: getByIdOfCurrentUserUsingGET_1
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApartmentPropertyDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorized user: []
    put:
      tags:
        - apartment-property-controller
      summary: updateByIdOfCurrentUser
      operationId: updateByIdOfCurrentUserUsingPUT
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - in: body
          name: updateRequestApartmentPropertyDto
          description: updateRequestApartmentPropertyDto
          required: true
          schema:
            $ref: '#/definitions/UpdateRequestApartmentPropertyDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorized user: []
  /real-estate-market/api/properties/housing/apartments/{id}:
    get:
      tags:
        - apartment-property-controller
      summary: getById
      operationId: getByIdUsingGET_3
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApartmentPropertyDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
    put:
      tags:
        - apartment-property-controller
      summary: updateById
      operationId: updateByIdUsingPUT_3
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - in: body
          name: updateRequestApartmentPropertyWithUserIdOfOwnerDto
          description: updateRequestApartmentPropertyWithUserIdOfOwnerDto
          required: true
          schema:
            $ref: '#/definitions/UpdateRequestApartmentPropertyWithUserIdOfOwnerDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
    delete:
      tags:
        - apartment-property-controller
      summary: deleteById
      operationId: deleteByIdUsingDELETE_3
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - ADMIN: []
  /real-estate-market/api/properties/housing/family-houses:
    get:
      tags:
        - family-house-property-controller
      summary: getAll
      operationId: getAllUsingGET_7
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: q
          in: query
          description: q
          required: false
          type: string
        - name: sort
          in: query
          description: sort
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/FamilyHousePropertyDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
    post:
      tags:
        - family-house-property-controller
      summary: add
      operationId: addUsingPOST_7
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - in: body
          name: requestFamilyHousePropertyWithUserIdOfOwnerDto
          description: requestFamilyHousePropertyWithUserIdOfOwnerDto
          required: true
          schema:
            $ref: '#/definitions/RequestFamilyHousePropertyWithUserIdOfOwnerDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
  /real-estate-market/api/properties/housing/family-houses/owners/current:
    get:
      tags:
        - family-house-property-controller
      summary: getAllDtoOfCurrentUser
      operationId: getAllDtoOfCurrentUserUsingGET_1
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: q
          in: query
          description: q
          required: false
          type: string
        - name: sort
          in: query
          description: sort
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/FamilyHousePropertyDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorized user: []
    post:
      tags:
        - family-house-property-controller
      summary: addFromCurrentUser
      operationId: addFromCurrentUserUsingPOST_3
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - in: body
          name: requestFamilyHousePropertyDto
          description: requestFamilyHousePropertyDto
          required: true
          schema:
            $ref: '#/definitions/RequestFamilyHousePropertyDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorized user: []
  /real-estate-market/api/properties/housing/family-houses/owners/current/{id}:
    get:
      tags:
        - family-house-property-controller
      summary: getDtoByIdOfCurrentUser
      operationId: getDtoByIdOfCurrentUserUsingGET
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FamilyHousePropertyDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorized user: []
    put:
      tags:
        - family-house-property-controller
      summary: updateByIdOfCurrentUser
      operationId: updateByIdOfCurrentUserUsingPUT_1
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - in: body
          name: updateRequestFamilyHousePropertyDto
          description: updateRequestFamilyHousePropertyDto
          required: true
          schema:
            $ref: '#/definitions/UpdateRequestFamilyHousePropertyDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorized user: []
  /real-estate-market/api/properties/housing/family-houses/{id}:
    get:
      tags:
        - family-house-property-controller
      summary: getById
      operationId: getByIdUsingGET_7
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FamilyHousePropertyDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
    put:
      tags:
        - family-house-property-controller
      summary: updateById
      operationId: updateByIdUsingPUT_7
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - in: body
          name: updateRequestFamilyHousePropertyWithUserIdOfOwnerDto
          description: updateRequestFamilyHousePropertyWithUserIdOfOwnerDto
          required: true
          schema:
            $ref: '#/definitions/UpdateRequestFamilyHousePropertyWithUserIdOfOwnerDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
    delete:
      tags:
        - family-house-property-controller
      summary: deleteById
      operationId: deleteByIdUsingDELETE_6
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - ADMIN: []
  /real-estate-market/api/properties/housing/owners/current:
    get:
      tags:
        - property-controller
      summary: getAllHousingPropertiesDtoOfCurrentUser
      operationId: getAllHousingPropertiesDtoOfCurrentUserUsingGET
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: q
          in: query
          description: q
          required: false
          type: string
        - name: sort
          in: query
          description: sort
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/HousingPropertyDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /real-estate-market/api/properties/lands:
    get:
      tags:
        - land-property-controller
      summary: getAllLandProperties
      operationId: getAllLandPropertiesUsingGET
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: q
          in: query
          description: q
          required: false
          type: string
        - name: sort
          in: query
          description: sort
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/LandPropertyDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
    post:
      tags:
        - land-property-controller
      summary: add
      operationId: addUsingPOST_10
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - in: body
          name: requestLandPropertyWithUserIdOfOwnerDto
          description: requestLandPropertyWithUserIdOfOwnerDto
          required: true
          schema:
            $ref: '#/definitions/RequestLandPropertyWithUserIdOfOwnerDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
  /real-estate-market/api/properties/lands/owners/current:
    get:
      tags:
        - land-property-controller
      summary: getAllDtoOfCurrentUser
      operationId: getAllDtoOfCurrentUserUsingGET_2
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: q
          in: query
          description: q
          required: false
          type: string
        - name: sort
          in: query
          description: sort
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/LandPropertyDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorized user: []
    post:
      tags:
        - land-property-controller
      summary: addFromCurrentUser
      operationId: addFromCurrentUserUsingPOST_5
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - in: body
          name: requestLandPropertyDto
          description: requestLandPropertyDto
          required: true
          schema:
            $ref: '#/definitions/RequestLandPropertyDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorized user: []
  /real-estate-market/api/properties/lands/owners/current/{id}:
    get:
      tags:
        - land-property-controller
      summary: getByIdOfCurrentUser
      operationId: getByIdOfCurrentUserUsingGET_4
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/LandPropertyDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorized user: []
    put:
      tags:
        - land-property-controller
      summary: updateByIdOfCurrentUser
      operationId: updateByIdOfCurrentUserUsingPUT_2
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - in: body
          name: updateRequestLandPropertyDto
          description: updateRequestLandPropertyDto
          required: true
          schema:
            $ref: '#/definitions/UpdateRequestLandPropertyDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorized user: []
  /real-estate-market/api/properties/lands/{id}:
    get:
      tags:
        - land-property-controller
      summary: getById
      operationId: getByIdUsingGET_10
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/LandPropertyDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
    put:
      tags:
        - land-property-controller
      summary: updateById
      operationId: updateByIdUsingPUT_10
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - in: body
          name: updateRequestLandPropertyWithUserIdOfOwnerDto
          description: updateRequestLandPropertyWithUserIdOfOwnerDto
          required: true
          schema:
            $ref: '#/definitions/UpdateRequestLandPropertyWithUserIdOfOwnerDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
    delete:
      tags:
        - land-property-controller
      summary: deleteById
      operationId: deleteByIdUsingDELETE_9
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - ADMIN: []
  /real-estate-market/api/properties/owners/current:
    get:
      tags:
        - property-controller
      summary: getAllDtoOfCurrentUser
      operationId: getAllDtoOfCurrentUserUsingGET_3
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: q
          in: query
          description: q
          required: false
          type: string
        - name: sort
          in: query
          description: sort
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/PropertyDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /real-estate-market/api/regions:
    get:
      tags:
        - region-controller
      summary: getAll
      operationId: getAllUsingGET_12
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: q
          in: query
          description: q
          required: false
          type: string
        - name: sort
          in: query
          description: sort
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/RegionDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - region-controller
      summary: add
      operationId: addUsingPOST_11
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - in: body
          name: requestRegionDto
          description: requestRegionDto
          required: true
          schema:
            $ref: '#/definitions/RequestRegionDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
  /real-estate-market/api/regions/{id}:
    get:
      tags:
        - region-controller
      summary: getById
      operationId: getByIdUsingGET_11
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RegionDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - region-controller
      summary: updateById
      operationId: updateByIdUsingPUT_11
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - in: body
          name: requestRegionDto
          description: requestRegionDto
          required: true
          schema:
            $ref: '#/definitions/RequestRegionDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
    delete:
      tags:
        - region-controller
      summary: deleteById
      operationId: deleteByIdUsingDELETE_10
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - ADMIN: []
  /real-estate-market/api/regions/{regionId}/cities:
    get:
      tags:
        - city-controller
      summary: getAllByRegionId
      operationId: getAllByRegionIdUsingGET
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: regionId
          in: path
          description: regionId
          required: true
          type: integer
          format: int64
        - name: sort
          in: query
          description: sort
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/CityDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - city-controller
      summary: addByRegionId
      operationId: addByRegionIdUsingPOST
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: regionId
          in: path
          description: regionId
          required: true
          type: integer
          format: int64
        - in: body
          name: requestCityWithoutRegionIdDto
          description: requestCityWithoutRegionIdDto
          required: true
          schema:
            $ref: '#/definitions/RequestCityWithoutRegionIdDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
  /real-estate-market/api/regions/{regionId}/cities/{cityId}:
    get:
      tags:
        - city-controller
      summary: getByRegionIdAndCityId
      operationId: getByRegionIdAndCityIdUsingGET
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: cityId
          in: path
          description: cityId
          required: true
          type: integer
          format: int64
        - name: regionId
          in: path
          description: regionId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CityDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - city-controller
      summary: updatedByRegionIdAndCityId
      operationId: updatedByRegionIdAndCityIdUsingPUT
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: cityId
          in: path
          description: cityId
          required: true
          type: integer
          format: int64
        - name: regionId
          in: path
          description: regionId
          required: true
          type: integer
          format: int64
        - in: body
          name: updateRequestCityDto
          description: updateRequestCityDto
          required: true
          schema:
            $ref: '#/definitions/UpdateRequestCityDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
    delete:
      tags:
        - city-controller
      summary: deleteByRegionIdAndCityId
      operationId: deleteByRegionIdAndCityIdUsingDELETE
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: cityId
          in: path
          description: cityId
          required: true
          type: integer
          format: int64
        - name: regionId
          in: path
          description: regionId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - ADMIN: []
  /real-estate-market/api/regions/{regionId}/cities/{cityId}/streets:
    get:
      tags:
        - street-controller
      summary: getAllByRegionIdAndCityId
      operationId: getAllByRegionIdAndCityIdUsingGET
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: cityId
          in: path
          description: cityId
          required: true
          type: integer
          format: int64
        - name: regionId
          in: path
          description: regionId
          required: true
          type: integer
          format: int64
        - name: sort
          in: query
          description: sort
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/StreetDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - street-controller
      summary: addByRegionIdAndCityId
      operationId: addByRegionIdAndCityIdUsingPOST
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: cityId
          in: path
          description: cityId
          required: true
          type: integer
          format: int64
        - name: regionId
          in: path
          description: regionId
          required: true
          type: integer
          format: int64
        - in: body
          name: requestStreetWithoutCityIdDto
          description: requestStreetWithoutCityIdDto
          required: true
          schema:
            $ref: '#/definitions/RequestStreetWithoutCityIdDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
  /real-estate-market/api/regions/{regionId}/cities/{cityId}/streets/{streetId}:
    get:
      tags:
        - street-controller
      summary: getByRegionIdAndCityIdAndStreetId
      operationId: getByRegionIdAndCityIdAndStreetIdUsingGET
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: cityId
          in: path
          description: cityId
          required: true
          type: integer
          format: int64
        - name: regionId
          in: path
          description: regionId
          required: true
          type: integer
          format: int64
        - name: streetId
          in: path
          description: streetId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/StreetDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - street-controller
      summary: updateByRegionIdAndCityIdAndStreetId
      operationId: updateByRegionIdAndCityIdAndStreetIdUsingPUT
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: cityId
          in: path
          description: cityId
          required: true
          type: integer
          format: int64
        - name: regionId
          in: path
          description: regionId
          required: true
          type: integer
          format: int64
        - name: streetId
          in: path
          description: streetId
          required: true
          type: integer
          format: int64
        - in: body
          name: updateRequestStreetDto
          description: updateRequestStreetDto
          required: true
          schema:
            $ref: '#/definitions/UpdateRequestStreetDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
    delete:
      tags:
        - street-controller
      summary: deleteByRegionIdAndCityIdAndStreetId
      operationId: deleteByRegionIdAndCityIdAndStreetIdUsingDELETE
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: cityId
          in: path
          description: cityId
          required: true
          type: integer
          format: int64
        - name: regionId
          in: path
          description: regionId
          required: true
          type: integer
          format: int64
        - name: streetId
          in: path
          description: streetId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - ADMIN: []
  /real-estate-market/api/regions/{regionId}/cities/{cityId}/streets/{streetId}/house-numbers:
    get:
      tags:
        - address-controller
      summary: getAllHouseNumbers
      operationId: getAllHouseNumbersUsingGET
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: cityId
          in: path
          description: cityId
          required: true
          type: integer
          format: int64
        - name: regionId
          in: path
          description: regionId
          required: true
          type: integer
          format: int64
        - name: sort
          in: query
          description: sort
          required: false
          type: string
        - name: streetId
          in: path
          description: streetId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/HouseNumberDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - address-controller
      summary: getAllHouseNumbers
      operationId: getAllHouseNumbersUsingPOST
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: cityId
          in: path
          description: cityId
          required: true
          type: integer
          format: int64
        - name: regionId
          in: path
          description: regionId
          required: true
          type: integer
          format: int64
        - in: body
          name: requestHouseNumberDto
          description: requestHouseNumberDto
          required: true
          schema:
            $ref: '#/definitions/RequestHouseNumberDto'
        - name: streetId
          in: path
          description: streetId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
  /real-estate-market/api/renovation-types:
    get:
      tags:
        - renovation-type-controller
      summary: getAll
      operationId: getAllUsingGET_13
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: q
          in: query
          description: q
          required: false
          type: string
        - name: sort
          in: query
          description: sort
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/RenovationType'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - renovation-type-controller
      summary: add
      operationId: addUsingPOST_12
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - in: body
          name: requestRenovationTypeDto
          description: requestRenovationTypeDto
          required: true
          schema:
            $ref: '#/definitions/RequestRenovationTypeDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
  /real-estate-market/api/renovation-types/{id}:
    get:
      tags:
        - renovation-type-controller
      summary: getById
      operationId: getByIdUsingGET_12
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RenovationType'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - renovation-type-controller
      summary: updateById
      operationId: updateByIdUsingPUT_12
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - in: body
          name: requestRenovationTypeDto
          description: requestRenovationTypeDto
          required: true
          schema:
            $ref: '#/definitions/RequestRenovationTypeDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
    delete:
      tags:
        - renovation-type-controller
      summary: deleteById
      operationId: deleteByIdUsingDELETE_11
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - ADMIN: []
  /real-estate-market/api/reviews/customers/current:
    get:
      tags:
        - review-controller
      summary: getReviewsOfCurrentCustomerUser
      description: Return all customer reviews of sellers of current user
      operationId: getReviewsOfCurrentCustomerUserUsingGET
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ReviewDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorized user: []
  /real-estate-market/api/reviews/customers/{customerId}:
    get:
      tags:
        - review-controller
      summary: getReviewsByCustomerId
      description: Return all customer reviews of sellers by customerId
      operationId: getReviewsByCustomerIdUsingGET
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: customerId
          in: path
          description: customerId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ReviewDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorized user: []
  /real-estate-market/api/reviews/sellers/current:
    get:
      tags:
        - review-controller
      summary: getReviewsOfCurrentSellerUser
      description: Returns all reviews of seller of current user
      operationId: getReviewsOfCurrentSellerUserUsingGET
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ReviewDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorized user: []
  /real-estate-market/api/reviews/sellers/{sellerId}:
    get:
      tags:
        - review-controller
      summary: getReviewsBySellerId
      description: Returns all reviews of seller by sellerId
      operationId: getReviewsBySellerIdUsingGET
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: sellerId
          in: path
          description: sellerId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ReviewDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - review-controller
      summary: sendReviewToSellerBySellerId
      description: Send a review to seller by sellerId from current user
      operationId: sendReviewToSellerBySellerIdUsingPOST
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - in: body
          name: requestReviewDto
          description: requestReviewDto
          required: true
          schema:
            $ref: '#/definitions/RequestReviewDto'
        - name: sellerId
          in: path
          description: sellerId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorized user: []
  /real-estate-market/api/streets:
    get:
      tags:
        - street-controller
      summary: getAll
      operationId: getAllUsingGET_14
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: q
          in: query
          description: q
          required: false
          type: string
        - name: sort
          in: query
          description: sort
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/StreetDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - street-controller
      summary: add
      operationId: addUsingPOST_13
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - in: body
          name: requestStreetDto
          description: requestStreetDto
          required: true
          schema:
            $ref: '#/definitions/RequestStreetDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
  /real-estate-market/api/streets/{id}:
    get:
      tags:
        - street-controller
      summary: getById
      operationId: getByIdUsingGET_13
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/StreetDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - street-controller
      summary: updatedById
      operationId: updatedByIdUsingPUT
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - in: body
          name: updateRequestStreetDto
          description: updateRequestStreetDto
          required: true
          schema:
            $ref: '#/definitions/UpdateRequestStreetDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
    delete:
      tags:
        - street-controller
      summary: deleteById
      operationId: deleteByIdUsingDELETE_12
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - ADMIN: []
  /real-estate-market/api/users:
    get:
      tags:
        - user-controller
      summary: getAllUsers
      operationId: getAllUsersUsingGET
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: rsqlQuery
          in: query
          description: rsqlQuery
          required: false
          type: string
        - name: sortQuery
          in: query
          description: sortQuery
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/UserDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
    post:
      tags:
        - user-controller
      summary: Adding, and also registration new users
      operationId: addUsingPOST_14
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - in: body
          name: requestUserDto
          description: requestUserDto
          required: true
          schema:
            $ref: '#/definitions/RequestUserDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /real-estate-market/api/users/current:
    get:
      tags:
        - user-controller
      summary: getCurrentUser
      operationId: getCurrentUserUsingGET
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorized user: []
    put:
      tags:
        - user-controller
      summary: updateCurrentUser
      operationId: updateCurrentUserUsingPUT
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - in: body
          name: updateRequestUserDto
          description: updateRequestUserDto
          required: true
          schema:
            $ref: '#/definitions/UpdateRequestUserDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorized user: []
  /real-estate-market/api/users/current/balance-operations:
    get:
      tags:
        - balance-operation-controller
      summary: getAllBalanceOperationsByUserId
      operationId: getAllBalanceOperationsByUserIdUsingGET_1
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: rsqlQuery
          in: query
          description: rsqlQuery
          required: false
          type: string
        - name: sortQuery
          in: query
          description: sortQuery
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/BalanceOperationWithoutUserIdDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorized users: []
  /real-estate-market/api/users/{id}:
    get:
      tags:
        - user-controller
      summary: getById
      operationId: getByIdUsingGET_14
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
    put:
      tags:
        - user-controller
      summary: updateById
      operationId: updateByIdUsingPUT_13
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
        - in: body
          name: updateRequestUserDto
          description: updateRequestUserDto
          required: true
          schema:
            $ref: '#/definitions/UpdateRequestUserDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
    delete:
      tags:
        - user-controller
      summary: deleteById
      operationId: deleteByIdUsingDELETE_13
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - ADMIN: []
  /real-estate-market/api/users/{userId}/balance-operations:
    get:
      tags:
        - balance-operation-controller
      summary: getAllBalanceOperationsByUserId
      operationId: getAllBalanceOperationsByUserIdUsingGET
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - name: rsqlQuery
          in: query
          description: rsqlQuery
          required: false
          type: string
        - name: sortQuery
          in: query
          description: sortQuery
          required: false
          type: string
        - name: userId
          in: path
          description: userId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/BalanceOperationWithoutUserIdDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
    post:
      tags:
        - balance-operation-controller
      summary: addBalanceOperationByUserId
      description: Add balance operation such as replenishment or reduction by user id
      operationId: addBalanceOperationByUserIdUsingPOST
      consumes:
        - application/json
      produces:
          - "application/xml"
          - "application/json"
      parameters:
        - name: Authorization
          in: header
          description: JWT token
          required: false
          type: string
        - in: body
          name: requestBalanceOperationDto
          description: requestBalanceOperationDto
          required: true
          schema:
            $ref: '#/definitions/RequestBalanceOperationDto'
        - name: userId
          in: path
          description: userId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RestResponseDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - ADMIN: []
definitions:
  AddressDto:
    type: object
    properties:
      city:
        $ref: '#/definitions/CityDto'
      houseNumber:
        type: string
      id:
        type: integer
        format: int64
      region:
        $ref: '#/definitions/RegionDto'
      street:
        $ref: '#/definitions/StreetDto'
    title: AddressDto
  AnnouncementDto:
    type: object
    properties:
      closedDt:
        type: string
        format: date-time
      createdDt:
        type: string
        format: date-time
      description:
        type: string
      id:
        type: integer
        format: int64
      price:
        type: number
        format: double
      propertyType:
        type: string
        enum:
          - APARTMENT
          - FAMILY_HOUSE
          - LAND
      status:
        type: string
        enum:
          - CLOSED
          - DELETED
          - HIDDEN
          - OPEN
      top:
        type: boolean
    title: AnnouncementDto
  AnnouncementTopPrice:
    type: object
    properties:
      announcementType:
        type: string
        enum:
          - DAILY_RENT
          - MONTHLY_RENT
          - SELL
      id:
        type: integer
        format: int64
      pricePerHour:
        type: number
        format: float
      propertyType:
        type: string
        enum:
          - APARTMENT
          - FAMILY_HOUSE
          - LAND
    title: AnnouncementTopPrice
  ApartmentAnnouncementDto:
    type: object
    properties:
      closedDt:
        type: string
        format: date-time
      createdDt:
        type: string
        format: date-time
      description:
        type: string
      id:
        type: integer
        format: int64
      price:
        type: number
        format: double
      property:
        $ref: '#/definitions/ApartmentPropertyDto'
      propertyType:
        type: string
        enum:
          - APARTMENT
          - FAMILY_HOUSE
          - LAND
      status:
        type: string
        enum:
          - CLOSED
          - DELETED
          - HIDDEN
          - OPEN
      top:
        type: boolean
      type:
        type: string
        enum:
          - DAILY_RENT
          - MONTHLY_RENT
          - SELL
    title: ApartmentAnnouncementDto
  ApartmentHouseDto:
    type: object
    properties:
      address:
        $ref: '#/definitions/AddressDto'
      buildingYear:
        type: integer
        format: int32
      elevator:
        type: boolean
      houseMaterial:
        type: string
      houseType:
        type: string
        enum:
          - APARTMENT_HOUSE
          - FAMILY_HOUSE
      housingType:
        type: string
        enum:
          - NEW_CONSTRUCTION
          - SECONDARY
      id:
        type: integer
        format: int64
      numberOfApartmentProperties:
        type: integer
        format: int32
      numberOfFloors:
        type: integer
        format: int32
    title: ApartmentHouseDto
  ApartmentPropertyDto:
    type: object
    properties:
      apartmentHouse:
        $ref: '#/definitions/ApartmentHouseDto'
      apartmentNumber:
        type: string
      area:
        type: number
        format: float
      floor:
        type: integer
        format: int32
      id:
        type: integer
        format: int64
      numberOfRooms:
        type: integer
        format: int32
      owner:
        $ref: '#/definitions/SimplyUserWithContactsAndRatingDto'
      propertyType:
        type: string
        enum:
          - APARTMENT
          - FAMILY_HOUSE
          - LAND
      renovationType:
        type: string
      status:
        type: string
        enum:
          - ACTIVE
          - DELETED
    title: ApartmentPropertyDto
  BalanceOperationWithoutUserIdDto:
    type: object
    properties:
      comment:
        type: string
      createdDt:
        type: string
        format: date-time
      sum:
        type: number
        format: double
    title: BalanceOperationWithoutUserIdDto
  CityDto:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
    title: CityDto
  FamilyHouseAnnouncementDto:
    type: object
    properties:
      closedDt:
        type: string
        format: date-time
      createdDt:
        type: string
        format: date-time
      description:
        type: string
      id:
        type: integer
        format: int64
      price:
        type: number
        format: double
      property:
        $ref: '#/definitions/FamilyHousePropertyDto'
      propertyType:
        type: string
        enum:
          - APARTMENT
          - FAMILY_HOUSE
          - LAND
      status:
        type: string
        enum:
          - CLOSED
          - DELETED
          - HIDDEN
          - OPEN
      top:
        type: boolean
      type:
        type: string
        enum:
          - DAILY_RENT
          - MONTHLY_RENT
          - SELL
    title: FamilyHouseAnnouncementDto
  FamilyHouseDto:
    type: object
    properties:
      address:
        $ref: '#/definitions/AddressDto'
      buildingYear:
        type: integer
        format: int32
      houseMaterial:
        type: string
      houseType:
        type: string
        enum:
          - APARTMENT_HOUSE
          - FAMILY_HOUSE
      housingType:
        type: string
        enum:
          - NEW_CONSTRUCTION
          - SECONDARY
      id:
        type: integer
        format: int64
      numberOfFloors:
        type: integer
        format: int32
      swimmingPool:
        type: boolean
    title: FamilyHouseDto
  FamilyHousePropertyDto:
    type: object
    properties:
      area:
        type: number
        format: float
      familyHouse:
        $ref: '#/definitions/FamilyHouseDto'
      id:
        type: integer
        format: int64
      numberOfRooms:
        type: integer
        format: int32
      owner:
        $ref: '#/definitions/SimplyUserWithContactsAndRatingDto'
      propertyType:
        type: string
        enum:
          - APARTMENT
          - FAMILY_HOUSE
          - LAND
      renovationType:
        type: string
      status:
        type: string
        enum:
          - ACTIVE
          - DELETED
    title: FamilyHousePropertyDto
  HouseDto:
    type: object
    properties:
      address:
        $ref: '#/definitions/AddressDto'
      buildingYear:
        type: integer
        format: int32
      houseMaterial:
        type: string
      houseType:
        type: string
        enum:
          - APARTMENT_HOUSE
          - FAMILY_HOUSE
      housingType:
        type: string
        enum:
          - NEW_CONSTRUCTION
          - SECONDARY
      id:
        type: integer
        format: int64
      numberOfFloors:
        type: integer
        format: int32
    title: HouseDto
  HouseMaterial:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
    title: HouseMaterial
  HouseNumberDto:
    type: object
    properties:
      houseNumber:
        type: string
    title: HouseNumberDto
  HousingAnnouncementDto:
    type: object
    properties:
      closedDt:
        type: string
        format: date-time
      createdDt:
        type: string
        format: date-time
      description:
        type: string
      id:
        type: integer
        format: int64
      price:
        type: number
        format: double
      propertyType:
        type: string
        enum:
          - APARTMENT
          - FAMILY_HOUSE
          - LAND
      status:
        type: string
        enum:
          - CLOSED
          - DELETED
          - HIDDEN
          - OPEN
      top:
        type: boolean
      type:
        type: string
        enum:
          - DAILY_RENT
          - MONTHLY_RENT
          - SELL
    title: HousingAnnouncementDto
  HousingPropertyDto:
    type: object
    properties:
      area:
        type: number
        format: float
      id:
        type: integer
        format: int64
      numberOfRooms:
        type: integer
        format: int32
      owner:
        $ref: '#/definitions/SimplyUserWithContactsAndRatingDto'
      propertyType:
        type: string
        enum:
          - APARTMENT
          - FAMILY_HOUSE
          - LAND
      renovationType:
        type: string
      status:
        type: string
        enum:
          - ACTIVE
          - DELETED
    title: HousingPropertyDto
  JwtRequestDto:
    type: object
    properties:
      password:
        type: string
      username:
        type: string
    title: JwtRequestDto
  JwtResponseDto:
    type: object
    properties:
      token:
        type: string
    title: JwtResponseDto
  LandAnnouncementDto:
    type: object
    properties:
      closedDt:
        type: string
        format: date-time
      createdDt:
        type: string
        format: date-time
      description:
        type: string
      id:
        type: integer
        format: int64
      price:
        type: number
        format: double
      property:
        $ref: '#/definitions/LandPropertyDto'
      propertyType:
        type: string
        enum:
          - APARTMENT
          - FAMILY_HOUSE
          - LAND
      status:
        type: string
        enum:
          - CLOSED
          - DELETED
          - HIDDEN
          - OPEN
      top:
        type: boolean
      type:
        type: string
        enum:
          - SELL
    title: LandAnnouncementDto
  LandPropertyDto:
    type: object
    properties:
      address:
        $ref: '#/definitions/AddressDto'
      area:
        type: number
        format: float
      id:
        type: integer
        format: int64
      owner:
        $ref: '#/definitions/SimplyUserWithContactsAndRatingDto'
      propertyType:
        type: string
        enum:
          - APARTMENT
          - FAMILY_HOUSE
          - LAND
      status:
        type: string
        enum:
          - ACTIVE
          - DELETED
    title: LandPropertyDto
  LocalTime:
    type: object
    properties:
      hour:
        type: integer
        format: int32
      minute:
        type: integer
        format: int32
      nano:
        type: integer
        format: int32
      second:
        type: integer
        format: int32
    title: LocalTime
  MessageDto:
    type: object
    properties:
      createdDate:
        type: string
        format: date
      createdTime:
        $ref: '#/definitions/LocalTime'
      id:
        type: integer
        format: int64
      receiver:
        $ref: '#/definitions/SimplyUserDto'
      sender:
        $ref: '#/definitions/SimplyUserDto'
      text:
        type: string
    title: MessageDto
  PropertyDto:
    type: object
    properties:
      area:
        type: number
        format: float
      id:
        type: integer
        format: int64
      owner:
        $ref: '#/definitions/SimplyUserWithContactsAndRatingDto'
      propertyType:
        type: string
        enum:
          - APARTMENT
          - FAMILY_HOUSE
          - LAND
      status:
        type: string
        enum:
          - ACTIVE
          - DELETED
    title: PropertyDto
  RegionDto:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
    title: RegionDto
  RenovationType:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
    title: RenovationType
  RentTimetableDto:
    type: object
    properties:
      announcementId:
        type: integer
        format: int64
      fromDt:
        type: string
        format: date-time
      toDt:
        type: string
        format: date-time
    title: RentTimetableDto
  RentTimetableWithoutAnnouncementIdAndWithUserIdOfTenantDto:
    type: object
    properties:
      fromDt:
        type: string
        format: date-time
      tenant:
        $ref: '#/definitions/SimplyUserWithContactsAndRatingDto'
      toDt:
        type: string
        format: date-time
    title: RentTimetableWithoutAnnouncementIdAndWithUserIdOfTenantDto
  RentTimetableWithoutAnnouncementIdDto:
    type: object
    properties:
      fromDt:
        type: string
        format: date-time
      toDt:
        type: string
        format: date-time
    title: RentTimetableWithoutAnnouncementIdDto
  RequestAddressDto:
    type: object
    required:
      - houseNumber
      - streetId
    properties:
      houseNumber:
        type: string
        minLength: 0
        maxLength: 255
      streetId:
        type: integer
        format: int64
    title: RequestAddressDto
  RequestApartmentAnnouncementDto:
    type: object
    required:
      - apartmentPropertyId
      - price
      - type
    properties:
      apartmentPropertyId:
        type: integer
        format: int64
      description:
        type: string
        minLength: 1
        maxLength: 4095
      price:
        type: number
        format: double
      type:
        type: string
        enum:
          - DAILY_RENT
          - MONTHLY_RENT
          - SELL
    title: RequestApartmentAnnouncementDto
  RequestApartmentHouseDto:
    type: object
    required:
      - addressId
    properties:
      addressId:
        type: integer
        format: int64
      buildingYear:
        type: integer
        format: int32
      elevator:
        type: boolean
      houseMaterialId:
        type: integer
        format: int64
      housingType:
        type: string
        enum:
          - NEW_CONSTRUCTION
          - SECONDARY
      numberOfFloors:
        type: integer
        format: int32
    title: RequestApartmentHouseDto
  RequestApartmentPropertyDto:
    type: object
    required:
      - apartmentHouseId
    properties:
      apartmentHouseId:
        type: integer
        format: int64
      apartmentNumber:
        type: string
        minLength: 1
        maxLength: 255
      area:
        type: number
        format: float
      floor:
        type: integer
        format: int32
      numberOfRooms:
        type: integer
        format: int32
      renovationTypeId:
        type: integer
        format: int64
    title: RequestApartmentPropertyDto
  RequestApartmentPropertyWithUserIdOfOwnerDto:
    type: object
    required:
      - apartmentHouseId
      - userIdOfOwner
    properties:
      apartmentHouseId:
        type: integer
        format: int64
      apartmentNumber:
        type: string
        minLength: 1
        maxLength: 255
      area:
        type: number
        format: float
      floor:
        type: integer
        format: int32
      numberOfRooms:
        type: integer
        format: int32
      renovationTypeId:
        type: integer
        format: int64
      userIdOfOwner:
        type: integer
        format: int64
    title: RequestApartmentPropertyWithUserIdOfOwnerDto
  RequestBalanceOperationDto:
    type: object
    required:
      - sum
    properties:
      comment:
        type: string
        minLength: 1
        maxLength: 255
      sum:
        type: number
        format: double
    title: RequestBalanceOperationDto
  RequestCityDto:
    type: object
    required:
      - name
      - regionId
    properties:
      name:
        type: string
        minLength: 0
        maxLength: 255
      regionId:
        type: integer
        format: int64
    title: RequestCityDto
  RequestCityWithoutRegionIdDto:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        minLength: 0
        maxLength: 255
    title: RequestCityWithoutRegionIdDto
  RequestFamilyHouseAnnouncementDto:
    type: object
    required:
      - familyHousePropertyId
      - price
      - type
    properties:
      description:
        type: string
        minLength: 1
        maxLength: 4095
      familyHousePropertyId:
        type: integer
        format: int64
      price:
        type: number
        format: double
      type:
        type: string
        enum:
          - DAILY_RENT
          - MONTHLY_RENT
          - SELL
    title: RequestFamilyHouseAnnouncementDto
  RequestFamilyHouseDto:
    type: object
    required:
      - addressId
    properties:
      addressId:
        type: integer
        format: int64
      buildingYear:
        type: integer
        format: int32
      houseMaterialId:
        type: integer
        format: int64
      housingType:
        type: string
        enum:
          - NEW_CONSTRUCTION
          - SECONDARY
      numberOfFloors:
        type: integer
        format: int32
      swimmingPool:
        type: boolean
    title: RequestFamilyHouseDto
  RequestFamilyHousePropertyDto:
    type: object
    required:
      - familyHouseId
    properties:
      area:
        type: number
        format: float
      familyHouseId:
        type: integer
        format: int64
      numberOfRooms:
        type: integer
        format: int32
      renovationTypeId:
        type: integer
        format: int64
    title: RequestFamilyHousePropertyDto
  RequestFamilyHousePropertyWithUserIdOfOwnerDto:
    type: object
    required:
      - familyHouseId
      - userIdOfOwner
    properties:
      area:
        type: number
        format: float
      familyHouseId:
        type: integer
        format: int64
      numberOfRooms:
        type: integer
        format: int32
      renovationTypeId:
        type: integer
        format: int64
      userIdOfOwner:
        type: integer
        format: int64
    title: RequestFamilyHousePropertyWithUserIdOfOwnerDto
  RequestHouseMaterialDto:
    type: object
    required:
      - name
    properties:
      name:
        type: string
    title: RequestHouseMaterialDto
  RequestHouseNumberDto:
    type: object
    required:
      - houseNumber
    properties:
      houseNumber:
        type: string
        minLength: 0
        maxLength: 255
    title: RequestHouseNumberDto
  RequestLandAnnouncementDto:
    type: object
    required:
      - landPropertyId
      - price
      - type
    properties:
      description:
        type: string
        minLength: 1
        maxLength: 4095
      landPropertyId:
        type: integer
        format: int64
      price:
        type: number
        format: double
      type:
        type: string
        enum:
          - SELL
    title: RequestLandAnnouncementDto
  RequestLandPropertyDto:
    type: object
    required:
      - streetId
    properties:
      area:
        type: number
        format: float
      streetId:
        type: integer
        format: int64
    title: RequestLandPropertyDto
  RequestLandPropertyWithUserIdOfOwnerDto:
    type: object
    required:
      - streetId
      - userIdOfOwner
    properties:
      area:
        type: number
        format: float
      streetId:
        type: integer
        format: int64
      userIdOfOwner:
        type: integer
        format: int64
    title: RequestLandPropertyWithUserIdOfOwnerDto
  RequestMessageDto:
    type: object
    required:
      - text
    properties:
      text:
        type: string
        minLength: 1
        maxLength: 1023
    title: RequestMessageDto
  RequestRegionDto:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        minLength: 0
        maxLength: 255
    title: RequestRegionDto
  RequestRenovationTypeDto:
    type: object
    required:
      - name
    properties:
      name:
        type: string
    title: RequestRenovationTypeDto
  RequestRentTimetableDto:
    type: object
    required:
      - fromDt
      - toDt
    properties:
      fromDt:
        type: string
        format: date-time
      toDt:
        type: string
        format: date-time
    title: RequestRentTimetableDto
  RequestRentTimetableWithUserIdOfTenantDto:
    type: object
    required:
      - fromDt
      - toDt
      - userIdOfTenant
    properties:
      fromDt:
        type: string
        format: date-time
      toDt:
        type: string
        format: date-time
      userIdOfTenant:
        type: integer
        format: int64
    title: RequestRentTimetableWithUserIdOfTenantDto
  RequestReviewDto:
    type: object
    required:
      - comment
    properties:
      comment:
        type: string
        minLength: 1
        maxLength: 1023
      note:
        type: integer
        format: int32
    title: RequestReviewDto
  RequestStreetDto:
    type: object
    required:
      - cityId
      - name
    properties:
      cityId:
        type: integer
        format: int64
      name:
        type: string
        minLength: 0
        maxLength: 255
    title: RequestStreetDto
  RequestStreetWithoutCityIdDto:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        minLength: 0
        maxLength: 255
    title: RequestStreetWithoutCityIdDto
  RequestTopTimetableDto:
    type: object
    required:
      - fromDt
      - toDt
    properties:
      fromDt:
        type: string
        format: date-time
      toDt:
        type: string
        format: date-time
    title: RequestTopTimetableDto
  RequestUserDto:
    type: object
    required:
      - password
      - username
    properties:
      email:
        type: string
        minLength: 1
        maxLength: 255
      firstName:
        type: string
        minLength: 1
        maxLength: 255
      lastName:
        type: string
        minLength: 1
        maxLength: 255
      password:
        type: string
        minLength: 8
        maxLength: 1024
      patronymic:
        type: string
        minLength: 1
        maxLength: 255
      phoneNumber:
        type: string
        minLength: 1
        maxLength: 15
      username:
        type: string
        minLength: 0
        maxLength: 255
    title: RequestUserDto
  RestResponseDto:
    type: object
    properties:
      message:
        type: string
      status:
        type: integer
        format: int32
    title: RestResponseDto
  ReviewDto:
    type: object
    properties:
      comment:
        type: string
      createdDt:
        type: string
        format: date-time
      customer:
        $ref: '#/definitions/SimplyUserDto'
      id:
        type: integer
        format: int64
      note:
        type: integer
        format: int32
      seller:
        $ref: '#/definitions/SimplyUserWithRatingDto'
    title: ReviewDto
  RoleDto:
    type: object
    properties:
      name:
        type: string
    title: RoleDto
  SimplyUserDto:
    type: object
    properties:
      firstName:
        type: string
      id:
        type: integer
        format: int64
      lastName:
        type: string
      patronymic:
        type: string
    title: SimplyUserDto
  SimplyUserWithContactsAndRatingDto:
    type: object
    properties:
      email:
        type: string
      firstName:
        type: string
      id:
        type: integer
        format: int64
      lastName:
        type: string
      patronymic:
        type: string
      phoneNumber:
        type: string
      rating:
        type: number
        format: float
    title: SimplyUserWithContactsAndRatingDto
  SimplyUserWithRatingDto:
    type: object
    properties:
      firstName:
        type: string
      id:
        type: integer
        format: int64
      lastName:
        type: string
      patronymic:
        type: string
      rating:
        type: number
        format: float
    title: SimplyUserWithRatingDto
  StreetDto:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
    title: StreetDto
  TopTimetableWithoutAnnouncementIdDto:
    type: object
    properties:
      fromDt:
        type: string
        format: date-time
      toDt:
        type: string
        format: date-time
    title: TopTimetableWithoutAnnouncementIdDto
  UpdateRequestAddressDto:
    type: object
    properties:
      houseNumber:
        type: string
        minLength: 1
        maxLength: 255
      streetId:
        type: integer
        format: int64
    title: UpdateRequestAddressDto
  UpdateRequestAnnouncementTopPriceDto:
    type: object
    properties:
      pricePerHour:
        type: number
        format: float
        minimum: 0
        exclusiveMinimum: false
    title: UpdateRequestAnnouncementTopPriceDto
  UpdateRequestApartmentAnnouncementDto:
    type: object
    properties:
      apartmentPropertyId:
        type: integer
        format: int64
      description:
        type: string
        minLength: 1
        maxLength: 4095
      price:
        type: number
        format: double
      status:
        type: string
        enum:
          - CLOSED
          - DELETED
          - HIDDEN
          - OPEN
      type:
        type: string
        enum:
          - DAILY_RENT
          - MONTHLY_RENT
          - SELL
    title: UpdateRequestApartmentAnnouncementDto
  UpdateRequestApartmentHouseDto:
    type: object
    properties:
      addressId:
        type: integer
        format: int64
      buildingYear:
        type: integer
        format: int32
      elevator:
        type: boolean
      houseMaterialId:
        type: integer
        format: int64
      housingType:
        type: string
        enum:
          - NEW_CONSTRUCTION
          - SECONDARY
      numberOfFloors:
        type: integer
        format: int32
    title: UpdateRequestApartmentHouseDto
  UpdateRequestApartmentPropertyDto:
    type: object
    properties:
      apartmentHouseId:
        type: integer
        format: int64
      apartmentNumber:
        type: string
        minLength: 1
        maxLength: 255
      area:
        type: number
        format: float
      floor:
        type: integer
        format: int32
      numberOfRooms:
        type: integer
        format: int32
      renovationTypeId:
        type: integer
        format: int64
      status:
        type: string
        enum:
          - ACTIVE
          - DELETED
    title: UpdateRequestApartmentPropertyDto
  UpdateRequestApartmentPropertyWithUserIdOfOwnerDto:
    type: object
    properties:
      apartmentHouseId:
        type: integer
        format: int64
      apartmentNumber:
        type: string
        minLength: 1
        maxLength: 255
      area:
        type: number
        format: float
      floor:
        type: integer
        format: int32
      numberOfRooms:
        type: integer
        format: int32
      renovationTypeId:
        type: integer
        format: int64
      status:
        type: string
        enum:
          - ACTIVE
          - DELETED
      userIdOfOwner:
        type: integer
        format: int64
    title: UpdateRequestApartmentPropertyWithUserIdOfOwnerDto
  UpdateRequestCityDto:
    type: object
    properties:
      name:
        type: string
        minLength: 1
        maxLength: 255
      regionId:
        type: integer
        format: int64
    title: UpdateRequestCityDto
  UpdateRequestFamilyHouseAnnouncementDto:
    type: object
    properties:
      description:
        type: string
        minLength: 1
        maxLength: 4095
      familyHousePropertyId:
        type: integer
        format: int64
      price:
        type: number
        format: double
      status:
        type: string
        enum:
          - CLOSED
          - DELETED
          - HIDDEN
          - OPEN
      type:
        type: string
        enum:
          - DAILY_RENT
          - MONTHLY_RENT
          - SELL
    title: UpdateRequestFamilyHouseAnnouncementDto
  UpdateRequestFamilyHouseDto:
    type: object
    properties:
      addressId:
        type: integer
        format: int64
      buildingYear:
        type: integer
        format: int32
      houseMaterialId:
        type: integer
        format: int64
      housingType:
        type: string
        enum:
          - NEW_CONSTRUCTION
          - SECONDARY
      numberOfFloors:
        type: integer
        format: int32
      swimmingPool:
        type: boolean
    title: UpdateRequestFamilyHouseDto
  UpdateRequestFamilyHousePropertyDto:
    type: object
    properties:
      area:
        type: number
        format: float
      familyHouseId:
        type: integer
        format: int64
      numberOfRooms:
        type: integer
        format: int32
      renovationTypeId:
        type: integer
        format: int64
      status:
        type: string
        enum:
          - ACTIVE
          - DELETED
    title: UpdateRequestFamilyHousePropertyDto
  UpdateRequestFamilyHousePropertyWithUserIdOfOwnerDto:
    type: object
    properties:
      area:
        type: number
        format: float
      familyHouseId:
        type: integer
        format: int64
      numberOfRooms:
        type: integer
        format: int32
      renovationTypeId:
        type: integer
        format: int64
      status:
        type: string
        enum:
          - ACTIVE
          - DELETED
      userIdOfOwner:
        type: integer
        format: int64
    title: UpdateRequestFamilyHousePropertyWithUserIdOfOwnerDto
  UpdateRequestLandAnnouncementDto:
    type: object
    properties:
      description:
        type: string
        minLength: 1
        maxLength: 4095
      landPropertyId:
        type: integer
        format: int64
      price:
        type: number
        format: double
      status:
        type: string
        enum:
          - CLOSED
          - DELETED
          - HIDDEN
          - OPEN
      type:
        type: string
        enum:
          - SELL
    title: UpdateRequestLandAnnouncementDto
  UpdateRequestLandPropertyDto:
    type: object
    properties:
      area:
        type: number
        format: float
      status:
        type: string
        enum:
          - ACTIVE
          - DELETED
      streetId:
        type: integer
        format: int64
    title: UpdateRequestLandPropertyDto
  UpdateRequestLandPropertyWithUserIdOfOwnerDto:
    type: object
    properties:
      area:
        type: number
        format: float
      status:
        type: string
        enum:
          - ACTIVE
          - DELETED
      streetId:
        type: integer
        format: int64
      userIdOfOwner:
        type: integer
        format: int64
    title: UpdateRequestLandPropertyWithUserIdOfOwnerDto
  UpdateRequestStreetDto:
    type: object
    properties:
      cityId:
        type: integer
        format: int64
      name:
        type: string
        minLength: 1
        maxLength: 255
    title: UpdateRequestStreetDto
  UpdateRequestUserDto:
    type: object
    properties:
      email:
        type: string
        minLength: 1
        maxLength: 255
      firstName:
        type: string
        minLength: 1
        maxLength: 255
      lastName:
        type: string
        minLength: 1
        maxLength: 255
      password:
        type: string
        minLength: 8
        maxLength: 1024
      patronymic:
        type: string
        minLength: 1
        maxLength: 255
      phoneNumber:
        type: string
        minLength: 1
        maxLength: 15
      username:
        type: string
        minLength: 1
        maxLength: 255
    title: UpdateRequestUserDto
  UserDto:
    type: object
    properties:
      balance:
        type: number
        format: double
      email:
        type: string
      enabled:
        type: boolean
      firstName:
        type: string
      id:
        type: integer
        format: int64
      lastName:
        type: string
      patronymic:
        type: string
      phoneNumber:
        type: string
      rating:
        type: number
        format: float
      roles:
        type: array
        items:
          $ref: '#/definitions/RoleDto'
      username:
        type: string
    title: UserDto
